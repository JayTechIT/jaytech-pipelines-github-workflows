on:
  workflow_call:
    inputs:
      application-name: 
        type: string
        description: The application name (repository name without api/contract/ui)
        required: true
      build-android:
        type: boolean
        description: Build Quasar in android mode?
        required: false
        default: false
      build-electron:
        type: boolean
        description: Build Quasar in Electron mode?
        required: false
        default: false
      build-ios:
        type: boolean
        description: Build Quasar in iOS mode?
        required: false
        default: false
      build-web:
        type: boolean
        description: Build Quasar in web mode?
        required: false
        default: true
      replacements-in:
        type: string
        description: Replacement placeholders separated by a semicolon (;)
        required: false
        default: ""
      source-folder:
        type: string
        description: Root folder of the source code
        required: false
        default: "./workflow/repository"
    secrets:
      pat-github:
        description: GitHub PAT
        required: true
      replacements-out:
        description: Replacement values separated by a semicolon (;)
        required: false

jobs:
  preparations:
    name: Quasar Preparations
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          repository: ${{inputs.repository}}
          token: ${{ secrets.pat-github }}
          path: workflow/repository
          fetch-depth: 0
      - name: Checkout JayTech actions
        uses: actions/checkout@v3
        with:
          ref: master
          repository: JayTechIT/jaytech-pipelines-github-actions
          token: ${{ secrets.pat-github }}
          path: workflow/actions
      - name: Replace placeholders
        uses: ./workflow/actions/replace-placeholders
        with:
          replacements-in: ${{inputs.replacements-in}}
          replacements-out: ${{secrets.replacements-out}}
      - id: semver
        uses: ./workflow/actions/gitversion-semver
      - name: Replace {{APP_VERSION}}
        uses: ./workflow/actions/replace-placeholders
        with:
          replacements-in: APP_VERSION
          replacements-out: ${{ steps.semver.outputs.semantic-version }}
      - name: Upload prepared repository
        uses: actions/upload-artifact@v3
        with:
          name: workflow
          path: workflow
          retention-days: 2

  build-web:
    if: ${{inputs.build-web}}
    needs: preparations
    name: Build Quasar Web
    runs-on: ubuntu-latest
    steps:
      - name: Download prepared repository
        uses: actions/download-artifact@v3
        with:
          name: workflow
          path: workflow
      - name: Quasar Build Web
        uses: ./workflow/actions/quasar-build-web
        with:
          folder: ${{inputs.source-folder}}

  build-android:
    if: ${{inputs.build-android}}
    needs: preparations
    name: Build Quasar Android
    runs-on: ubuntu-latest
    steps:
      - name: Download prepared repository
        uses: actions/download-artifact@v3
        with:
          name: workflow
          path: workflow
      - name: Quasar Build Android
        uses: ./workflow/actions/quasar-build-android
        with:
          folder: ${{inputs.source-folder}}

  sync-environment-repository:
    needs: [build-android, build-web]
    name: Sync Environment Repository
    runs-on: ubuntu-latest
    steps:
      - id: semver
        uses: ./workflow/actions/gitversion-semver
      - name: release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: ${{ steps.semver.outputs.semantic-version }}
          tag_name: ${{ steps.semver.outputs.semantic-version }}
        env:
          GITHUB_TOKEN: ${{ secrets.pat-github }}
      - name: Create GitHub release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: ${{ steps.semver.outputs.semantic-version }}
          tag_name: ${{ steps.semver.outputs.semantic-version }}
        env:
          GITHUB_TOKEN: ${{ secrets.pat-github }}
      - if: ${{inputs.build-web}}
        name: Download WEB package
        uses: actions/download-artifact@v1
        with:
          name: quasar-build-web
          path: ./output/web
      - if: ${{inputs.build-web}}
        name: TAR WEB
        run: |
          tar -czvf ./output/web/quasar-web.tar.gz ./output/web/*
      - if: ${{inputs.build-web}}
        name: Upload quasar-web to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.pat-github }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./output/web/quasar-web.tar.gz
          asset_name: quasar-web.tar.gz
          asset_content_type: application/gzip
      - if: ${{inputs.build-android}}
        name: Download WEB package
        uses: actions/download-artifact@v1
        with:
          name: quasar-build-android
          path: ./output/android
      - if: ${{inputs.build-android}}
        name: TAR WEB
        run: |
          tar -czvf ./output/android/quasar-android.tar.gz ./output/android/*
      - if: ${{inputs.build-android}}
        name: Upload quasar-android to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.pat-github }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./output/android/quasar-android.tar.gz
          asset_name: quasar-android.tar.gz
          asset_content_type: application/gzip
      - name: Checkout GitOps
        uses: actions/checkout@v3
        with:
          ref: "development"
          repository: ${{ github.repository_owner }}/${{ inputs.application-name }}-${{inputs.environment-name}}
          token: ${{secrets.pat-github}}
          path: workflow/gitops
      - name: Set GitOps version
        uses: fjogeleit/yaml-update-action@main
        with:
          valueFile: "./workflow/gitops/version.yml"
          propertyPath: "version.ui"
          value: ${{ steps.semver.outputs.semantic-version }}
          commitChange: false
          updateFile: true
      - name: Push to GitOps
        id: push_directory
        uses: cpina/github-action-push-to-another-repository@v1.4.2
        env:
          API_TOKEN_GITHUB: ${{ secrets.pat-github }}
        with:
          source-directory: workflow/gitops
          destination-github-username: ${{ github.repository_owner }}
          destination-repository-name: ${{ inputs.application-name }}-${{inputs.environment-name}}
          commit-message: Updated ${{ github.event.repository.name }} version to ${{ steps.semver.outputs.semantic-version }} -> ${{github.event.head_commit.message}}
          target-branch: development
