on:
  workflow_call:    
    inputs:
      application-name:
        type: string
        description: The application name (repository name without api/contract/ui)
        required: true
      environment-name:
        type: string
        description: The keyword used to define your environment repository
        required: false
        default: environment
      replacements-in:
        type: string
        description: Replacement placeholders separated by a semicolon (;)
        required: false
        default: ""
      repository:
        description: Repository name; format = [organization]/[repository-name]
        required: true
        type: string
      solution-location:
        description: Additional folders to get to solution file location
        required: false
        default: Source/
        type: string
      sync-environment:
        description: Sync the new version with a -environment repository
        required: false
        type: string
        default: "false"        
    secrets:
      aws-region:
        description: The region in AWS to push to
        required: true
      aws-access-key-id:
        description: The AWS Access Key ID
        required: true
      aws-secret-access-key:
        description: The AWS Secret Access Key
        required: true
      azure-api-key:
        description: The Azure API key
        required: false      
      azure-feed:
        description: The Azure Artifacts Feed
        required: false
      azure-source:
        description: The Azure Artifacts Source
        required: false
      pat-github:
        description: GitHub PAT
        required: true
      replacements-out:
        description: Replacement values separated by a semicolon (;)
        required: false

jobs:
  dotnet-service-pipeline:
    name: .NET Service Pipeline
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          repository: ${{inputs.repository}}
          token: ${{ secrets.pat-github }}
          path: workflow/repository
          fetch-depth: 0
      - name: Checkout JayTech actions
        uses: actions/checkout@v3
        with:
          ref: master
          repository: JayTechIT/jaytech-pipelines-github-actions
          token: ${{ secrets.pat-github }}
          path: workflow/actions
      - name: Replace placeholders
        uses: ./workflow/actions/replace-placeholders
        with:
          replacements-in: ${{inputs.replacements-in}}
          replacements-out: ${{secrets.replacements-out}}  
      - name: .NET Test
        uses: ./workflow/actions/dotnet-test
        with:
          solution-path: ${{inputs.solution-location}}
          azure-feed: ${{secrets.azure-feed}}
          azure-source: ${{secrets.azure-source}}
          azure-api-key: ${{secrets.azure-api-key}}  
      - id: semver
        uses: ./workflow/actions/gitversion-semver
      - name: Push Docker Image To AWS
        uses: ./workflow/actions/docker-push-aws
        with:
          container-name: ${{ github.event.repository.name }}
          software-version: ${{ steps.semver.outputs.semantic-version }}
          aws-access-key-id: ${{secrets.aws-access-key-id}}
          aws-secret-access-key: ${{secrets.aws-secret-access-key}}
          aws-region: ${{secrets.aws-region}}
      - name: Tag & Release
        uses: actions/create-release@v1        
        if: contains('refs/heads/master', github.ref)
        with:
          draft: false
          prerelease: false
          release_name: ${{ steps.semver.outputs.semantic-version }}
          tag_name: ${{ steps.semver.outputs.semantic-version }}     
        env:
          GITHUB_TOKEN: ${{ secrets.pat-github }}
      - if: contains('refs/heads/master', github.ref) && ${{ inputs.sync-environment == 'true' }}
        name: Checkout GitOps
        uses: actions/checkout@v3
        with:
          ref: "development"
          repository: ${{ github.repository_owner }}/${{ inputs.application-name }}-${{inputs.environment-name}}
          token: ${{secrets.pat-github}}
          path: workflow/gitops
      - if: contains('refs/heads/master', github.ref) && ${{ inputs.sync-environment == 'true' }}
        name: Set GitOps version
        uses: fjogeleit/yaml-update-action@main
        with:
          valueFile: "./workflow/gitops/version.yml"
          propertyPath: "version.api"
          value: ${{ steps.semver.outputs.semantic-version }}
          commitChange: false
          updateFile: true
      - if: contains('refs/heads/master', github.ref) && ${{ inputs.sync-environment == 'true' }}
        name: Push to GitOps
        id: push_directory
        uses: cpina/github-action-push-to-another-repository@v1.4.2
        env:
          API_TOKEN_GITHUB: ${{ secrets.pat-github }}
        with:
          source-directory: workflow/gitops
          destination-github-username: ${{ github.repository_owner }}
          destination-repository-name: ${{ inputs.application-name }}-${{inputs.environment-name}}
          commit-message: Updated ${{ github.event.repository.name }} version to ${{ steps.semver.outputs.semantic-version }}
          target-branch: development
