on:
  workflow_call:
    inputs:
      application-name:
        type: string
        description: The application name (repository name without api/contract/ui)
        required: true
      environment-name:
        type: string
        description: The keyword used to define your environment repository
        required: false
        default: environment
      replacements-in:
        type: string
        description: Replacement placeholders separated by a semicolon (;)
        required: false
        default: ""
      source-folder:
        type: string
        description: Root folder of the source code
        required: false
        default: "./workflow/repository"
      replacements-out:
        type: string
        description: Replacement values separated by a semicolon (;)
        required: false
    secrets:
      github-token:
        required: false
      jaytech-credential:
        required: true

jobs:
  build-web:
    name: Quasar Web Pipeline
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          repository: ${{ github.repository_owner }}/${{ inputs.application-name }}-ui
          path: workflow/repository
          fetch-depth: 0
      - name: Replace placeholders
        uses: JayTechIT/jaytech-pipelines-github-actions/replace-placeholders@master
        with:
          replacements-in: ${{inputs.replacements-in}}
          replacements-out: ${{inputs.replacements-out}}
      - id: semver
        uses: JayTechIT/jaytech-pipelines-github-actions/gitversion-semver@master
      - name: Use project-level .npmrc if present
        run: |
          if [ -f "workflow/repository/.npmrc" ]; then
            echo "Using repo .npmrc"
            cp "workflow/repository/.npmrc" ~/.npmrc
            cat ~/.npmrc
          else
            echo "No .npmrc found in project"
          fi
        shell: bash
      - name: Install NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: 20
      - name: Quasar Build Web
        working-directory: workflow/repository
        run: |
          npm install
          npm i -g @quasar/cli
          # Run ESLint but ignore errors
          npm run lint || true
          quasar build
        shell: bash
      - name: Create release using GitHub CLI
        working-directory: workflow/repository
        run: |
          gh release create "${{ steps.semver.outputs.semantic-version }}" \
            --title "${{ steps.semver.outputs.semantic-version }}" \
            --notes "" \
            $([[ "${{ github.ref }}" != "refs/heads/master" ]] && echo "--prerelease")
      - name: TAR WEB
        run: |
          tar -czvf workflow/repository/dist/spa/quasar-web.tar.gz workflow/repository/dist/spa/*
      - name: Upload quasar-web to GitHub Release
        working-directory: workflow/repository/dist/spa
        run: |
          gh release upload "${{ steps.semver.outputs.semantic-version }}" quasar-web.tar.gz --clobber
      - name: Clean Prerelease Versions
        if: github.ref == 'refs/heads/master'
        uses: ./workflow/actions/github-clean-prerelease-versions
        with:
          repo: ${{ github.repository }}
          token: ${{ secrets.github-token }}
          specifiedVersion: ${{ steps.semver.outputs.semantic-version }}
      - name: Sync environment via Authorization Center
        uses: JayTechIT/jaytech-pipelines-github-actions/sync-environment@master
        with:
          type: ui
          org: ${{ github.repository_owner }}
          repo: ${{ github.event.repository.name }}
          version: ${{ steps.semver.outputs.semantic-version }}
          message: ${{ github.event.head_commit.message }}
          jaytech-credential-key: ${{ secrets.jaytech-credential }}
      - name: Clean up old tags and releases
        uses: ./workflow/actions/github-clean-tags-releases
        with:
          keep: 10
          token: ${{ secrets.github-token }}
          semantic-version: ${{ steps.semver.outputs.semantic-version }}